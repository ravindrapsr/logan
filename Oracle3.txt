1.
SELECT STAFF_NAME,DEPT_CODE,DEPT_NAME
FROM STAFF_MASTER NATURAL JOIN DEPARTMENT_MASTER
WHERE STAFF_SAL>20000;

2.
SELECT STAFF_NAME,DEPT_CODE,DEPT_NAME
FROM STAFF_MASTER NATURAL JOIN DEPARTMENT_MASTER
WHERE DEPT_CODE <> 10 AND UPPER(STAFF_NAME) LIKE '%A%';

3.
SELECT A.STAFF_CODE,A.STAFF_NAME,A.DEPT_CODE,C.DEPT_NAME,A.MGR_CODE,B.STAFF_NAME "Manager"
FROM STAFF_MASTER A ,DEPARTMENT_MASTER C,STAFF_MASTER B
WHERE B.STAFF_CODE=A.MGR_CODE AND A.DEPT_CODE=C.DEPT_CODE
ORDER BY A.STAFF_CODE;

4.
 SELECT A.STUDENT_CODE,A.STUDENT_NAME,C.DEPT_NAME,B.SUBJECT1,B.SUBJECT2,B.SUBJECT3
 FROM STUDENT_MASTER A, STUDENT_MARKS B, DEPARTMENT_MASTER C
 WHERE A.STUDENT_CODE=B.STUDENT_CODE AND A.DEPT_CODE=C.DEPT_CODE
 GROUP BY A.STUDENT_CODE,A.STUDENT_NAME,C.DEPT_NAME,B.SUBJECT1,B.SUBJECT2,B.SUBJECT3
 HAVING B.SUBJECT1>=60 AND B.SUBJECT2>=60 AND B.SUBJECT3>=60

5.
SELECT STUDENT_CODE,STUDENT_NAME,BOOK_CODE,BOOK_NAME
FROM STUDENT_MASTER NATURAL JOIN BOOK_MASTER NATURAL JOIN BOOK_TRANSACTIONS
WHERE BOOK_EXPECTED_RETURN_DATE=SYSDATE;

6.
SELECT STAFF_CODE,STAFF_NAME,DEPT_NAME,DESIGN_NAME,BOOK_CODE,BOOK_NAME,BOOK_ISSUE_DATE
FROM STAFF_MASTER NATURAL JOIN DESIGNATION_MASTER NATURAL JOIN DEPARTMENT_MASTER NATURAL JOIN BOOK_MASTER NATURAL JOIN BOOK_TRANSACTIONS
WHERE FLOOR(SYSDATE-BOOK_ISSUE_DATE)=30;

7.
SELECT STAFF_CODE,STAFF_NAME,DESIGN_NAME,DEPT_NAME,DEPT_HOD,HOD_NAME
FROM STAFF_MASTER NATURAL JOIN DEPARTMENT_MASTER NATURAL JOIN DESIGNATION_MASTER
WHERE STAFF_CODE NOT IN (SELECT DEPT_HOD FROM DEPARTMENT_MASTER);

8.
SELECT STUDENT_CODE,STUDENT_NAME,DEPT_NAME,(SUBJECT1+SUBJECT2+SUBJECT3) "TOTAL MARKS",HOD_NAME
FROM STUDENT_MASTER NATURAL JOIN STUDENT_MARKS NATURAL JOIN DEPARTMENT_MASTER
ORDER BY 3,4;

9.
SELECT STAFF_CODE,STAFF_NAME,DESIGN_NAME,DEPT_NAME,BOOK_CODE,BOOK_NAME,BOOK_PUB_AUTHOR,FLOOR(SYSDATE-BOOK_EXPECTED_RETURN_DATE)*5 "Fine"
FROM STAFF_MASTER NATURAL JOIN DESIGNATION_MASTER NATURAL JOIN DEPARTMENT_MASTER NATURAL JOIN BOOK_MASTER NATURAL JOIN BOOK_TRANSACTIONS;

10.
SELECT STAFF_CODE,STAFF_NAME,STAFF_SAL
FROM STAFF_MASTER
WHERE STAFF_SAL<(SELECT AVG(STAFF_SAL) FROM STAFF_MASTER);

11.
SELECT STAFF_CODE,STAFF_NAME
FROM STAFF_MASTER
WHERE STAFF_CODE NOT IN (SELECT MGR_CODE FROM STAFF_MASTER);

12
SELECT BOOK_PUB_AUTHOR,BOOK_NAME
FROM BOOK_MASTER
WHERE BOOK_PUB_AUTHOR IN (SELECT BOOK_PUB_AUTHOR FROM BOOK_MASTER GROUP BY BOOK_PUB_AUTHOR HAVING COUNT(BOOK_CODE)>1);

13.
SELECT DISTINCT(STAFF_CODE),STAFF_NAME,DEPT_NAME
FROM STAFF_MASTER NATURAL JOIN DEPARTMENT_MASTER NATURAL JOIN BOOK_TRANSACTION
WHERE STAFF_CODE IN (SELECT STAFF_CODE FROM BOOK_TRANSACTIONS GROUP BY STAFF_CODE HAVING COUNT(STAFF_CODE)>1);

14.
SELECT STUDENT_CODE,STUDENT_NAME,SUBJECT1,SUBJECT2,SUBJECT3,(SUBJECT1+SUBJECT2+SUBJECT3) AS TOTAL
FROM STUDENT_MASTER NATURAL JOIN STUDENT_MARKS
WHERE ROWNUM<=10
ORDER BY TOTAL DESC;

15.
SELECT STAFF_NAME,DEPT_CODE,STAFF_SAL
FROM STAFF_MASTER A
WHERE STAFF_SAL < (SELECT AVG(STAFF_SAL) FROM STAFF_MASTER WHERE A.DEPT_CODE=DEPT_CODE)
ORDER BY DEPT_CODE;

16.
SELECT DEPT_NAME,STAFF_NAME
FROM STAFF_MASTER NATURAL JOIN DEPARTMENT_MASTER
ORDER BY DEPT_NAME;

17.
SELECT STUDENT_CODE,STUDENT_NAME
FROM STUDENT_MASTER NATURAL JOIN STUDENT_MARKS NATURAL JOIN DEPARTMENT_MASTER
WHERE DEPT_NAME='Computer Science' AND SUBJECT1=(SELECT MAX(SUBJECT1) FROM STUDENT_MARKS) AND SUBJECT2=(SELECT MAX(SUBJECT2) FROM STUDENT_MARKS) AND SUBJECT3=(SELECT MAX(SUBJECT3) FROM STUDENT_MARKS) AND STUDENT_YEAR=TO_CHAR(SYSDATE,'YYYY');

18.
 SELECT STUDENT_CODE,STUDENT_NAME,DEPT_NAME
 FROM STUDENT_MASTER NATURAL JOIN DEPARTMENT_MASTER
 WHERE DEPT_NAME IN
 (SELECT DEPT_NAME
 FROM STUDENT_MASTER NATURAL JOIN DEPARTMENT_MASTER
 GROUP BY DEPT_NAME HAVING COUNT(STUDENT_CODE) IN (SELECT MAX(COUNT(STUDENT_CODE)) FROM STUDENT_MASTER GROUP BY DEPT_CODE));

19.
SELECT STAFF_CODE,STAFF_NAME,DEPT_NAME,DESIGN_NAME
FROM STAFF_MASTER NATURAL JOIN DEPARTMENT_MASTER NATURAL JOIN DESIGNATION_MASTER
WHERE HIREDATE IN (SELECT MAX(HIREDATE) FROM STAFF_MASTER);

20.
SELECT A.MGR_CODE,(SELECT STAFF_NAME FROM STAFF_MASTER WHERE STAFF_CODE =A.MGR_CODE) AS "Manager",COUNT(A.STAFF_CODE)
FROM STAFF_MASTER A
GROUP BY MGR_CODE;